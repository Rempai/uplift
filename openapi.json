{
  "openapi": "3.0.2",
  "info": {
    "title": "Moed",
    "description": "Monolith API for the Based Moed app",
    "version": "0.5"
  },
  "paths": {
    "/api/auth/get_logs/": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get Logs",
        "operationId": "get_logs",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/api/auth/token/": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login For Access Token",
        "operationId": "login_for_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": { "$ref": "#/components/schemas/Body_Auth-login_for_access_token" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Token" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh/": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh",
        "operationId": "refresh",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RefreshToken" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AccessToken" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/auth/register/": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register User",
        "operationId": "register_user",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/Register" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/Token" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout/": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/auth/user/me/": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get Me",
        "operationId": "get_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserRead" } }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/auth/users/": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get Users",
        "operationId": "get_users",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Auth-Get Users",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UserRead" }
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/auth/user/{id}/": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get User By Id",
        "operationId": "get_user_by_id",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserRead" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Auth"],
        "summary": "Delete User",
        "operationId": "delete_user",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Auth"],
        "summary": "Update User",
        "operationId": "update_user",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/UserUpdate" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/UserUpdate" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/auth/user/": {
      "post": {
        "tags": ["Auth"],
        "summary": "Post User",
        "operationId": "post_user",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/Register" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/passage_handler/passages/": {
      "get": {
        "tags": ["PassageHandling"],
        "summary": "Get Passages",
        "operationId": "get_passages",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "Passage Name", "type": "string" },
            "name": "passage_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Passagehandling-Get Passages",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PassageRead" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/passage_handler/passage/{id}/": {
      "get": {
        "tags": ["PassageHandling"],
        "summary": "Get Passage By Id",
        "operationId": "get_passage_by_id",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PassageRead" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["PassageHandling"],
        "summary": "Delete Passage",
        "operationId": "delete_passage",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["PassageHandling"],
        "summary": "Update Passage",
        "operationId": "update_passage",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PassageUpdate" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PassageUpdate" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/passage_handler/passage/": {
      "post": {
        "tags": ["PassageHandling"],
        "summary": "Post Passage",
        "operationId": "post_passage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": { "$ref": "#/components/schemas/Body_PassageHandling-post_passage" }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/passage_handler/attributes/": {
      "get": {
        "tags": ["PassageHandling"],
        "summary": "Get Attributes",
        "operationId": "get_attributes",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Passagehandling-Get Attributes",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AttributeRead" }
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/passage_handler/attribute/{id}/": {
      "get": {
        "tags": ["PassageHandling"],
        "summary": "Get Attribute By Id",
        "operationId": "get_attribute_by_id",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AttributeRead" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["PassageHandling"],
        "summary": "Delete Attribute",
        "operationId": "delete_attribute",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["PassageHandling"],
        "summary": "Update Attribute",
        "operationId": "update_attribute",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AttributeUpdate" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/AttributeUpdate" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/passage_handler/attribute/": {
      "post": {
        "tags": ["PassageHandling"],
        "summary": "Post Attribute",
        "operationId": "post_attribute",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/AttributeCreate" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/character/passengers/": {
      "get": {
        "tags": ["Characters"],
        "summary": "Get Passengers",
        "operationId": "get_passengers",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Characters-Get Passengers",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PassengerRead" }
                }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/character/passenger/{id}/": {
      "get": {
        "tags": ["Characters"],
        "summary": "Get Passenger By Id",
        "operationId": "get_passenger_by_id",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PassengerRead" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Characters"],
        "summary": "Delete Passenger",
        "operationId": "delete_passenger",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Characters"],
        "summary": "Update Passenger",
        "operationId": "update_passenger",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PassengerUpdate" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/PassengerUpdate" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/character/passenger/": {
      "post": {
        "tags": ["Characters"],
        "summary": "Post Passenger",
        "operationId": "post_passenger",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/PassengerCreate" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/character/rides/": {
      "get": {
        "tags": ["Characters"],
        "summary": "Get Rides",
        "operationId": "get_rides",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "User Id", "type": "integer" },
            "name": "user_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Characters-Get Rides",
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/RideRead" }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/character/ride/{id}/": {
      "get": {
        "tags": ["Characters"],
        "summary": "Get Ride By Id",
        "operationId": "get_ride_by_id",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RideRead" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Characters"],
        "summary": "Delete Ride",
        "operationId": "delete_ride",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Characters"],
        "summary": "Update Ride",
        "operationId": "update_ride",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RideUpdate" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/RideUpdate" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/character/ride/": {
      "post": {
        "tags": ["Characters"],
        "summary": "Post Ride",
        "operationId": "post_ride",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RideCreate" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/character/reviews/": {
      "get": {
        "tags": ["Characters"],
        "summary": "Get Reviews",
        "operationId": "get_reviews",
        "parameters": [
          {
            "required": false,
            "schema": { "title": "User Id", "type": "integer" },
            "name": "user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": { "title": "Ride Id", "type": "integer" },
            "name": "ride_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Characters-Get Reviews",
                  "type": "array",
                  "items": {
                    "anyOf": [
                      { "$ref": "#/components/schemas/ReviewRead" },
                      { "$ref": "#/components/schemas/ReviewedUser" }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/character/review/{id}/": {
      "get": {
        "tags": ["Characters"],
        "summary": "Get Review By Id",
        "operationId": "get_review_by_id",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "delete": {
        "tags": ["Characters"],
        "summary": "Delete Review",
        "operationId": "delete_review",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "patch": {
        "tags": ["Characters"],
        "summary": "Update Review",
        "operationId": "update_review",
        "parameters": [
          {
            "required": true,
            "schema": { "title": "Id", "type": "integer" },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ReviewUpdate" } }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/ReviewUpdate" } }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/character/review/": {
      "post": {
        "tags": ["Characters"],
        "summary": "Post Review",
        "operationId": "post_review",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ReviewCreate" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/character/reviewed_user/": {
      "post": {
        "tags": ["Characters"],
        "summary": "Post Reviewed User",
        "operationId": "post_reviewed_user",
        "requestBody": {
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ReviewedUserCreate" } }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/factory/": {
      "post": {
        "tags": ["Factory"],
        "summary": "Factory",
        "operationId": "factory",
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessToken": {
        "title": "AccessToken",
        "required": ["token_type", "access_token"],
        "type": "object",
        "properties": {
          "token_type": { "title": "Token Type", "type": "string", "example": "Bearer" },
          "access_token": {
            "title": "Access Token",
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwicm9sZSI6IkFkbWluIiwiZXhwIjoxNjcwMTg4ODE4fQ.Fbq3kCDjLP3W10VOW14_afkCBw2VzVxhbdf2I4IM1gE"
          }
        }
      },
      "AttributeCreate": {
        "title": "AttributeCreate",
        "required": ["color", "font_size", "font_family"],
        "type": "object",
        "properties": {
          "color": {
            "title": "Color",
            "maxLength": 30,
            "type": "string",
            "example": "var(--n-aurora-red)"
          },
          "font_size": { "title": "Font Size", "type": "string", "example": "1.2em" },
          "font_family": { "title": "Font Family", "type": "string", "example": "Arial" }
        }
      },
      "AttributeRead": {
        "title": "AttributeRead",
        "required": ["color", "font_size", "font_family", "id"],
        "type": "object",
        "properties": {
          "color": {
            "title": "Color",
            "maxLength": 30,
            "type": "string",
            "example": "var(--n-aurora-red)"
          },
          "font_size": { "title": "Font Size", "type": "string", "example": "1.2em" },
          "font_family": { "title": "Font Family", "type": "string", "example": "Arial" },
          "id": { "title": "Id", "type": "integer", "example": 1 }
        }
      },
      "AttributeUpdate": {
        "title": "AttributeUpdate",
        "required": ["color", "font_size", "font_family"],
        "type": "object",
        "properties": {
          "color": {
            "title": "Color",
            "maxLength": 30,
            "type": "string",
            "example": "var(--n-aurora-red)"
          },
          "font_size": { "title": "Font Size", "type": "string", "example": "1.2em" },
          "font_family": { "title": "Font Family", "type": "string", "example": "Arial" }
        }
      },
      "Body_Auth-login_for_access_token": {
        "title": "Body_Auth-login_for_access_token",
        "required": ["username", "password"],
        "type": "object",
        "properties": {
          "grant_type": { "title": "Grant Type", "pattern": "password", "type": "string" },
          "username": { "title": "Username", "type": "string" },
          "password": { "title": "Password", "type": "string" },
          "scope": { "title": "Scope", "type": "string", "default": "" },
          "client_id": { "title": "Client Id", "type": "string" },
          "client_secret": { "title": "Client Secret", "type": "string" }
        }
      },
      "Body_PassageHandling-post_passage": {
        "title": "Body_PassageHandling-post_passage",
        "required": ["passage_content", "passage_name", "attribute_id"],
        "type": "object",
        "properties": {
          "passage_content": { "title": "Passage Content", "type": "string", "format": "binary" },
          "passage_name": { "title": "Passage Name" },
          "continue_button": { "title": "Continue Button", "default": false },
          "trunk": { "title": "Trunk", "default": false },
          "attribute_id": { "title": "Attribute Id" }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ValidationError" }
          }
        }
      },
      "PassageRead": {
        "title": "PassageRead",
        "required": [
          "passage_name",
          "passage_content",
          "branch_name",
          "speaker",
          "attribute_id",
          "ride_id",
          "id",
          "ride",
          "attribute"
        ],
        "type": "object",
        "properties": {
          "passage_name": {
            "title": "Passage Name",
            "type": "string",
            "example": "Story 1",
            "unique": true
          },
          "passage_content": {
            "title": "Passage Content",
            "type": "string",
            "example": "<p onclick=\"branch('PaoloFinish')\">lorem ipsum</p>"
          },
          "branch_name": { "title": "Branch Name", "type": "string", "example": "PaoloTrunk1" },
          "continue_button": { "title": "Continue Button", "type": "boolean", "example": true },
          "speaker": { "title": "Speaker", "type": "string", "example": "Paolo" },
          "trunk": { "title": "Trunk", "type": "boolean", "example": true },
          "attribute_id": { "title": "Attribute Id", "type": "integer", "example": 1 },
          "ride_id": { "title": "Ride Id", "type": "integer", "example": 1 },
          "id": { "title": "Id", "type": "integer", "example": 1 },
          "ride": { "title": "Ride", "type": "object" },
          "attribute": { "title": "Attribute", "type": "object" }
        }
      },
      "PassageUpdate": {
        "title": "PassageUpdate",
        "required": [
          "passage_name",
          "passage_content",
          "branch_name",
          "speaker",
          "attribute_id",
          "ride_id"
        ],
        "type": "object",
        "properties": {
          "passage_name": {
            "title": "Passage Name",
            "type": "string",
            "example": "Story 1",
            "unique": true
          },
          "passage_content": {
            "title": "Passage Content",
            "type": "string",
            "example": "<p onclick=\"branch('PaoloFinish')\">lorem ipsum</p>"
          },
          "branch_name": { "title": "Branch Name", "type": "string", "example": "PaoloTrunk1" },
          "continue_button": { "title": "Continue Button", "type": "boolean", "example": true },
          "speaker": { "title": "Speaker", "type": "string", "example": "Paolo" },
          "trunk": { "title": "Trunk", "type": "boolean", "example": true },
          "attribute_id": { "title": "Attribute Id", "type": "integer", "example": 1 },
          "ride_id": { "title": "Ride Id", "type": "integer", "example": 1 }
        }
      },
      "PassengerCreate": {
        "title": "PassengerCreate",
        "required": ["name", "icon"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string", "example": "Paolo", "index": true },
          "icon": { "title": "Icon", "type": "string", "example": "/paolo.img" }
        }
      },
      "PassengerRead": {
        "title": "PassengerRead",
        "required": ["name", "icon", "id"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string", "example": "Paolo", "index": true },
          "icon": { "title": "Icon", "type": "string", "example": "/paolo.img" },
          "id": { "title": "Id", "exclusiveMinimum": 0, "type": "integer", "example": 1 }
        }
      },
      "PassengerUpdate": {
        "title": "PassengerUpdate",
        "required": ["name", "icon"],
        "type": "object",
        "properties": {
          "name": { "title": "Name", "type": "string", "example": "Paolo", "index": true },
          "icon": { "title": "Icon", "type": "string", "example": "/paolo.img" }
        }
      },
      "RefreshToken": {
        "title": "RefreshToken",
        "required": ["refresh_token"],
        "type": "object",
        "properties": {
          "refresh_token": {
            "title": "Refresh Token",
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZXhwIjoxNjcwMzU4MDE4fQ.0R8VMKXA6XAg6gCKYVIFl3u6m1mvwMGxqzLeBEc3pQY"
          }
        }
      },
      "Register": {
        "title": "Register",
        "required": ["username", "password", "repeat_password"],
        "type": "object",
        "properties": {
          "username": { "title": "Username", "type": "string" },
          "password": { "title": "Password", "type": "string" },
          "repeat_password": { "title": "Repeat Password", "type": "string" },
          "role": { "title": "Role", "type": "string" }
        }
      },
      "ReviewCreate": {
        "title": "ReviewCreate",
        "required": ["stars", "description", "solution", "linked_score", "passenger_id"],
        "type": "object",
        "properties": {
          "stars": { "title": "Stars", "exclusiveMinimum": 0, "type": "integer", "example": 4 },
          "description": {
            "title": "Description",
            "type": "string",
            "example": "Great ride! lorem ipsum lorem ipsum"
          },
          "solution": { "title": "Solution", "type": "string", "example": "Love yourself" },
          "linked_score": { "title": "Linked Score", "type": "integer", "example": "4" },
          "passenger_id": { "title": "Passenger Id", "type": "integer", "example": 1 }
        }
      },
      "ReviewRead": {
        "title": "ReviewRead",
        "required": ["stars", "description", "solution", "linked_score", "id", "passenger"],
        "type": "object",
        "properties": {
          "stars": { "title": "Stars", "exclusiveMinimum": 0, "type": "integer", "example": 4 },
          "description": {
            "title": "Description",
            "type": "string",
            "example": "Great ride! lorem ipsum lorem ipsum"
          },
          "solution": { "title": "Solution", "type": "string", "example": "Love yourself" },
          "linked_score": { "title": "Linked Score", "type": "integer", "example": "4" },
          "id": { "title": "Id", "type": "integer", "example": 1 },
          "passenger": { "title": "Passenger", "type": "object" }
        }
      },
      "ReviewUpdate": {
        "title": "ReviewUpdate",
        "required": ["stars", "description", "solution", "linked_score"],
        "type": "object",
        "properties": {
          "stars": { "title": "Stars", "exclusiveMinimum": 0, "type": "integer", "example": 4 },
          "description": {
            "title": "Description",
            "type": "string",
            "example": "Great ride! lorem ipsum lorem ipsum"
          },
          "solution": { "title": "Solution", "type": "string", "example": "Love yourself" },
          "linked_score": { "title": "Linked Score", "type": "integer", "example": "4" }
        }
      },
      "ReviewedUser": {
        "title": "ReviewedUser",
        "required": ["Review", "date"],
        "type": "object",
        "properties": {
          "Review": { "$ref": "#/components/schemas/ReviewRead" },
          "date": { "title": "Date", "type": "string", "format": "date-time" }
        }
      },
      "ReviewedUserCreate": {
        "title": "ReviewedUserCreate",
        "required": ["ride_id", "user_id", "review_id", "date"],
        "type": "object",
        "properties": {
          "ride_id": { "title": "Ride Id", "type": "integer", "example": 1 },
          "user_id": { "title": "User Id", "type": "integer", "example": 1 },
          "review_id": { "title": "Review Id", "type": "integer", "example": 1 },
          "date": { "title": "Date", "type": "string", "format": "date-time" }
        }
      },
      "RideCreate": {
        "title": "RideCreate",
        "required": [
          "from_location",
          "to_location",
          "time",
          "main_problem",
          "parties_involved",
          "main_cause",
          "bravery",
          "perseverance",
          "integrity",
          "enthusiasm",
          "passenger_id"
        ],
        "type": "object",
        "properties": {
          "from_location": {
            "title": "From Location",
            "type": "string",
            "example": "Roosevelt University"
          },
          "to_location": {
            "title": "To Location",
            "type": "string",
            "example": "Woodbridge Avenue"
          },
          "time": { "title": "Time", "exclusiveMinimum": 0, "type": "integer", "example": 60 },
          "main_problem": {
            "title": "Main Problem",
            "type": "string",
            "example": "I have been feeling down as of late"
          },
          "parties_involved": {
            "title": "Parties Involved",
            "type": "string",
            "example": "everyone"
          },
          "main_cause": {
            "title": "Main Cause",
            "type": "string",
            "example": "failure to communicate"
          },
          "bravery": {
            "title": "Bravery",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 3
          },
          "perseverance": {
            "title": "Perseverance",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 1
          },
          "integrity": {
            "title": "Integrity",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 3
          },
          "enthusiasm": {
            "title": "Enthusiasm",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 1
          },
          "passenger_id": {
            "title": "Passenger Id",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 1
          }
        }
      },
      "RideRead": {
        "title": "RideRead",
        "required": [
          "from_location",
          "to_location",
          "time",
          "main_problem",
          "parties_involved",
          "main_cause",
          "bravery",
          "perseverance",
          "integrity",
          "enthusiasm",
          "id",
          "passenger"
        ],
        "type": "object",
        "properties": {
          "from_location": {
            "title": "From Location",
            "type": "string",
            "example": "Roosevelt University"
          },
          "to_location": {
            "title": "To Location",
            "type": "string",
            "example": "Woodbridge Avenue"
          },
          "time": { "title": "Time", "exclusiveMinimum": 0, "type": "integer", "example": 60 },
          "main_problem": {
            "title": "Main Problem",
            "type": "string",
            "example": "I have been feeling down as of late"
          },
          "parties_involved": {
            "title": "Parties Involved",
            "type": "string",
            "example": "everyone"
          },
          "main_cause": {
            "title": "Main Cause",
            "type": "string",
            "example": "failure to communicate"
          },
          "bravery": {
            "title": "Bravery",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 3
          },
          "perseverance": {
            "title": "Perseverance",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 1
          },
          "integrity": {
            "title": "Integrity",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 3
          },
          "enthusiasm": {
            "title": "Enthusiasm",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 1
          },
          "id": { "title": "Id", "exclusiveMinimum": 0, "type": "integer", "example": 1 },
          "passenger": { "title": "Passenger", "type": "object" }
        }
      },
      "RideUpdate": {
        "title": "RideUpdate",
        "required": [
          "from_location",
          "to_location",
          "time",
          "main_problem",
          "parties_involved",
          "main_cause",
          "bravery",
          "perseverance",
          "integrity",
          "enthusiasm",
          "passenger_id"
        ],
        "type": "object",
        "properties": {
          "from_location": {
            "title": "From Location",
            "type": "string",
            "example": "Roosevelt University"
          },
          "to_location": {
            "title": "To Location",
            "type": "string",
            "example": "Woodbridge Avenue"
          },
          "time": { "title": "Time", "exclusiveMinimum": 0, "type": "integer", "example": 60 },
          "main_problem": {
            "title": "Main Problem",
            "type": "string",
            "example": "I have been feeling down as of late"
          },
          "parties_involved": {
            "title": "Parties Involved",
            "type": "string",
            "example": "everyone"
          },
          "main_cause": {
            "title": "Main Cause",
            "type": "string",
            "example": "failure to communicate"
          },
          "bravery": {
            "title": "Bravery",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 3
          },
          "perseverance": {
            "title": "Perseverance",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 1
          },
          "integrity": {
            "title": "Integrity",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 3
          },
          "enthusiasm": {
            "title": "Enthusiasm",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 1
          },
          "passenger_id": {
            "title": "Passenger Id",
            "exclusiveMinimum": 0,
            "type": "integer",
            "example": 1
          }
        }
      },
      "Token": {
        "title": "Token",
        "required": ["refresh_token", "token_type", "access_token"],
        "type": "object",
        "properties": {
          "refresh_token": {
            "title": "Refresh Token",
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwiZXhwIjoxNjcwMzU4MDE4fQ.0R8VMKXA6XAg6gCKYVIFl3u6m1mvwMGxqzLeBEc3pQY"
          },
          "token_type": { "title": "Token Type", "type": "string", "example": "Bearer" },
          "access_token": {
            "title": "Access Token",
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxIiwicm9sZSI6IkFkbWluIiwiZXhwIjoxNjcwMTg4ODE4fQ.Fbq3kCDjLP3W10VOW14_afkCBw2VzVxhbdf2I4IM1gE"
          }
        }
      },
      "UserRead": {
        "title": "UserRead",
        "required": ["username", "role", "id"],
        "type": "object",
        "properties": {
          "username": { "title": "Username", "type": "string" },
          "role": { "title": "Role", "type": "string" },
          "disabled": { "title": "Disabled", "type": "boolean" },
          "id": { "title": "Id", "type": "integer" }
        }
      },
      "UserUpdate": {
        "title": "UserUpdate",
        "required": ["username", "role"],
        "type": "object",
        "properties": {
          "username": { "title": "Username", "type": "string" },
          "role": { "title": "Role", "type": "string" },
          "disabled": { "title": "Disabled", "type": "boolean" },
          "id": { "title": "Id", "type": "integer" },
          "password": { "title": "Password", "type": "string" },
          "old_password": { "title": "Old Password", "type": "string" },
          "confirm_password": { "title": "Confirm Password", "type": "string" }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": ["loc", "msg", "type"],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] }
          },
          "msg": { "title": "Message", "type": "string" },
          "type": { "title": "Error Type", "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": { "password": { "scopes": {}, "tokenUrl": "/api/auth/token" } }
      }
    }
  },
  "tags": [
    { "name": "Auth", "description": "All authentication logic, and User management" },
    { "name": "Characters", "description": "REST API calls for passengers, reviews, and rides" },
    {
      "name": "PassageHandling",
      "description": "All REST API calls that have to do with passages"
    },
    { "name": "Factory", "description": "Factory function to create mock data" }
  ]
}
